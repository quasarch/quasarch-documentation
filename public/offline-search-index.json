[{"body":"Quasarch’s Container Service is a decentralized, highly scalable, container management service that makes it easy to run and manage your containers on a serverless infrastructure. This infrastructure is managed by Quasarch which launches your services and workloads on a Decentralized Compute Marketplace.\nBy using a decentralized protocol to lease resources from a global network of compute providers, we can offer our users a lower cost, censorship-resistant, localized hosting solution to run containers. Container Service also supports a range of Nvidia GPUs to be used by containers.\nWhy decentralized? Decentralized Physical Infrastructure Networks, also known as DePINs, are open and accessible networks, in contrast with traditional infrastructure that often end up with a centralized entity that dictates the terms and conditions for what users can do with the services provided. This can have a direct negative impact on innovation, cost and user-experience.\nGlobally decentralized networks allow projects to be deployed on regions closer to where the business operates, bringing products closer to its users.\nQuick Start Deploy your first container on the Decentralized Cloud.\n","categories":["Container Service"],"description":"Serverless compute for containerized applications on the decentralized cloud.","excerpt":"Serverless compute for containerized applications on the decentralized …","ref":"/docs/tutorials/containers/","tags":"","title":"Container Service"},{"body":"Sign up for a Quasarch Cloud account If you do not have a Quasarch Cloud account, complete the following steps to create one.\nTo sign up for a Quasarch Cloud account\nVisit https://console.quasarch.cloud/register. Follow the online instructions.\nQuasarch Cloud sends you a confirmation email after the sign-up process is complete. At any time, you can view your current account activity and manage your account by going to https://console.quasarch.cloud and clicking on your profile picture.\n","categories":["Container Service"],"description":"Set up guide to start using the Container Service on Quasarch Cloud.","excerpt":"Set up guide to start using the Container Service on Quasarch Cloud.","ref":"/docs/tutorials/containers/user-guide/setup/","tags":"","title":"Set up to use Container Service"},{"body":"This user guide provides an introduction to decentralized containers and introductory step-by-step procedures to run them on Container Service. Docker basics takes you through the basic steps to create a Docker container image and deploy it on Quasarch Cloud.\n","categories":["Container Service"],"description":"User guide for Container Service.","excerpt":"User guide for Container Service.","ref":"/docs/tutorials/containers/user-guide/","tags":"","title":"User Guide for Container Service"},{"body":"The Users HTTP API provides endpoints for user management and authentication.\nLogin GET /v1/users/token\nOnly works with Basic Authentication (username and password).\nExample Request:\nGET /v1/users/token Accept: application/json Authorization: Basic dXNlckBleGFtcGxlLmNvbTpwYXNzd29yZA== Example Response:\nHTTP/1.1 200 OK Content-Type: application/json { \"token\": \"\u003cjwt\u003e\" } Create User POST /v1/users\nCreate/register a new user.\nRequired permissions\nNo permissions required\nExample request:\nPOST /v1/users Accept: application/json { \"name\": \"Bob Smith\", \"email\": \"bob@example.com\", \"password\": \"bob123\", \"passwordConfirm\": \"bob123\" } Example response:\nHTTP/1.1 201 Created Content-Type: application/json { \"id\": \"33bdf6ce-a26e-4b52-80d2-f26d12245cce\", \"name\": \"Bob Smith\", \"email\": \"bob@example.com\", \"roles\": [ \"USER\" ], \"enabled\": true, \"dateCreated\": \"2023-09-21T16:12:09Z\", \"dateUpdated\": \"2023-09-21T16:12:09Z\" } Status codes:\n201 - Created 400 - Bad Request 500 - Internal Server Error Delete User DELETE /v1/users/:id\nDelete the given user from the system. This endpoint deletes the current data regarding the user.\nRequired permissions\nNeeds the ADMIN role.\nExample Request:\nDELETE /v1/users/33bdf6ce-a26e-4b52-80d2-f26d12245cce Accept: application/json Authorization: Bearer eyJFZXdEG1pZWmNrMkZYbkUlrIjoiT0tTcaDFsNY2RnVKZTFV9 Example Response:\nHTTP/1.1 204 No Content Status codes:\n204 - No Content 401 - Unauthorized 403 - Forbidden 404 - Not Found 500 - Internal Server Error Get All Users GET /v1/users\nGet the list of users.\nRequired permissions\nNeeds the ADMIN role.\nExample Request:\nGET /v1/users Accept: application/json Authorization: Bearer eyJFZXdEG1pZWmNrMkZYbkUlrIjoiT0tTcaDFsNY2RnVKZTFV9 Example Response:\nHTTP/1.1 200 OK Content-Type: application/json { \"items\": [ { \"id\": \"45b5fbd3-755f-4379-8f07-a58d4a30fa2f\", \"name\": \"User Gopher\", \"email\": \"user.gopher@example.com\", \"roles\": [ \"USER\" ], \"enabled\": true, \"dateCreated\": \"2019-03-24T00:00:00Z\", \"dateUpdated\": \"2019-03-24T00:00:00Z\" }, { \"id\": \"5cf37266-3473-4006-984f-9325122678b7\", \"name\": \"Admin Gopher\", \"email\": \"admin.gopher@example.com\", \"roles\": [ \"ADMIN\", \"USER\" ], \"enabled\": true, \"dateCreated\": \"2019-03-24T00:00:00Z\", \"dateUpdated\": \"2019-03-24T00:00:00Z\" } ], \"total\": 2, \"page\": 1, \"rowsPerPage\": 10 } Status codes:\n200 - OK 401 - Unauthorized 403 - Forbidden 500 - Internal Server Error Get User GET /v1/users/:id\nQuery a specific user.\nRequired permissions\nNeeds the ADMIN role or being the subject of the request.\nExample Request:\nGET /v1/users/33bdf6ce-a26e-4b52-80d2-f26d12245cce Accept: application/json Authorization: Bearer eyJFZXdEG1pZWmNrMkZYbkUlrIjoiT0tTcaDFsNY2RnVKZTFV9 Example Response:\nHTTP/1.1 200 Created Content-Type: application/json { \"id\": \"33bdf6ce-a26e-4b52-80d2-f26d12245cce\", \"name\": \"Bob Smith\", \"email\": \"bob@example.com\", \"roles\": [ \"USER\" ], \"enabled\": true, \"dateCreated\": \"2023-09-21T16:12:09Z\", \"dateUpdated\": \"2023-09-21T16:12:09Z\" } Status codes:\n200 - OK 401 - Unauthorized 403 - Forbidden 404 - Not Found 500 - Internal Server Error Get User Crypto Addresses GET /v1/users/:id/addresses\nGet a specific user’s crypto addresses.\nRequired permissions\nNeeds the ADMIN role or being the subject of the request.\nExample Request:\nGET /v1/users/45b5fbd3-755f-4379-8f07-a58d4a30fa2f/addresses Accept: application/json Authorization: Bearer eyJFZXdEG1pZWmNrMkZYbkUlrIjoiT0tTcaDFsNY2RnVKZTFV9 Example Response:\nHTTP/1.1 200 OK Content-Type: application/json { \"akash\": \"akash1gxglu3ny085vnwearp3kf6tvhw2c7dya9ltn7q\" } Status codes:\n200 - OK 401 - Unauthorized 403 - Forbidden 404 - Not Found 500 - Internal Server Error ","categories":"","description":"The Users HTTP API provides endpoints for user management and authentication.","excerpt":"The Users HTTP API provides endpoints for user management and …","ref":"/docs/reference/api-reference/users/","tags":"","title":"Users API"},{"body":"The Container Service HTTP API provides endpoints to access the Container Service through HTTP. Container Service enables you to run serverless containers that are invocable via requests abstracting away all infrastructure management, so you can focus on building great applications.\nGet All Containers GET /v1/containers\nGet the list of all the containers belonging to the user requesting.\nRequired permissions\nNo permissions required.\nExample Request:\nGET /v1/containers Accept: application/json Authorization: Bearer eyJFZXdEG1pZWmNrMkZYbkUlrIjoiT0tTcaDFsNY2RnVKZTFV9 Example Response:\nHTTP/1.1 200 OK Content-Type: application/json { \"items\": [ { \"id\": \"fa71f25f-f982-4bde-bc14-1d250776325d\", \"name\": \"logs-debug\", \"createdBy\": \"5cf37266-3473-4006-984f-9325122678b7\", \"image\": \"nginxdemos/hello:latest\", \"cpu\": 1, \"ram\": \"2Gi\", \"gpu\": 0, \"ephemeralStorage\": \"100Gi\", \"command\": null, \"arguments\": null, \"env\": {}, \"port\": \"80\", \"dateCreated\": \"2023-09-22T15:36:06Z\", \"dateUpdated\": \"0001-01-01T00:00:00Z\", \"status\": \"deployed\", \"urls\": [ \"9njshomh7tb5ra3cffu55suqbs.ingress.europlots.com\" ], \"desiredGPUs\": [] }, ], \"total\": 1, \"page\": 1, \"rowsPerPage\": 10 } 200 - OK 401 - Unauthorized 500 - Internal Server Error Get Container GET /v1/containers/:id\nGet a specific container by id.\nRequired permissions\nNo permissions required\nExample request:\nGET /v1/containers/93cfc912-0660-44a7-ae26-e7e23f919659 Accept: application/json Authorization: Bearer eyJFZXdEG1pZWmNrMkZYbkUlrIjoiT0tTcaDFsNY2RnVKZTFV9 Example response:\n{ \"id\": \"93cfc912-0660-44a7-ae26-e7e23f919659\", \"name\": \"logs-debug\", \"createdBy\": \"5cf37266-3473-4006-984f-9325122678b7\", \"image\": \"nginxdemos/hello:latest\", \"cpu\": 1, \"ram\": \"2Gi\", \"gpu\": 0, \"ephemeralStorage\": \"100Gi\", \"command\": null, \"arguments\": null, \"env\": {}, \"port\": \"80\", \"dateCreated\": \"2023-09-22T15:36:06Z\", \"dateUpdated\": \"0001-01-01T00:00:00Z\", \"status\": \"deployed\", \"urls\": [ \"9njshomh7tb5ra3cffu55suqbs.ingress.europlots.com\" ], \"desiredGPUs\": [] } Status codes:\n200 - OK 401 - Unauthorized 403 - Forbidden 404 - Not Found 500 - Internal Server Error Create Container POST /v1/containers\nCreates and deploys a container. Warning Images must include the tag. Tag is not latest by default. Required permissions\nNo permissions required.\nExample Request:\nPOST /v1/containers Content-Type: application/json Authorization: Bearer eyJFZXdEG1pZWmNrMkZYbkUlrIjoiT0tTcaDFsNY2RnVKZTFV9 { \"name\": \"hello-world\", \"image\": \"nginxdemos/hello:latest\", \"cpu\": 1, \"ram\": \"512Mi\", \"gpu\": 0, \"ephemeralStorage\": \"10Gi\", \"port\": \"80\", \"env\": { \"FOO\": \"bar\" } } Example Response:\nHTTP/1.1 201 Created Content-Type: application/json { \"id\": \"e91b624c-9706-4fc0-be27-83b56d0fffcd\", \"name\": \"hello-world\", \"createdBy\": \"5cf37266-3473-4006-984f-9325122678b7\", \"image\": \"nginxdemos/hello:latest\", \"cpu\": 0.5, \"ram\": \"512Mi\", \"gpu\": 0, \"ephemeralStorage\": \"10Gi\", \"command\": null, \"arguments\": null, \"env\": { \"FOO\": \"bar\" }, \"port\": \"80\", \"dateCreated\": \"2023-09-23T17:03:36Z\", \"dateUpdated\": \"2023-09-23T17:03:36Z\", \"status\": \"deploying\", \"urls\": null, \"desiredGPUs\": null } Status codes:\n201 - Created 401 - Unauthorized 500 - Internal Server Error Delete Container DELETE /v1/containers/:id\nDelete Container.\nRequired permissions\nNeeds the ADMIN role or being the subject of the request.\nExample Request:\nDELETE /v1/containers/4c00e32c-ebd4-4a0c-b62a-34d74f630b5f Content-Type: application/json Authorization: Bearer eyJFZXdEG1pZWmNrMkZYbkUlrIjoiT0tTcaDFsNY2RnVKZTFV9 Example Response:\nHTTP/1.1 204 No Content Status codes:\n204 - No Content 401 - Unauthorized 403 - Forbidden 404 - Not Found 500 - Internal Server Error Update Container PUT /v1/containers/:id\nUpdate a Container. This creates a new revision and deploys it.\nRequired permissions\nNeeds the ADMIN role or being the subject of the request.\nExample Request:\nPUT /v1/containers/6aae435c-e3e6-4976-a5e0-f99a9f930e44 Content-Type: application/json Authorization: Bearer eyJFZXdEG1pZWmNrMkZYbkUlrIjoiT0tTcaDFsNY2RnVKZTFV9 { \"image\": \"nginxdemos/hello:updated\", \"env\": { \"FOO\": \"updated-bar\" } } Example Response:\nHTTP/1.1 200 OK Content-Type: application/json { \"id\": \"6aae435c-e3e6-4976-a5e0-f99a9f930e44\", \"name\": \"cool-service\", \"createdBy\": \"5cf37266-3473-4006-984f-9325122678b7\", \"image\": \"nginxdemos/hello:updated\", \"cpu\": 0.5, \"ram\": \"2Gi\", \"gpu\": 1, \"ephemeralStorage\": \"20Gi\", \"command\": null, \"arguments\": null, \"env\": { \"FOO\": \"updated-bar\" }, \"port\": \"8080\", \"dateCreated\": \"2019-03-24T00:00:00Z\", \"dateUpdated\": \"2023-09-23T17:04:53Z\", \"status\": \"deploying\", \"urls\": [ \"lol.example.com\", \"lol-api.example.com\" ], \"desiredGPUs\": [ \"Nvidia a100\", \"Nvidia tesla-p4\" ] } Status codes:\n200 - OK 401 - Unauthorized 403 - Forbidden 404 - Not Found 500 - Internal Server Error Get Container Revisions GET /v1/containers/:id/revisions\nGet revisions of a Container.\nRequired permissions\nNeeds the ADMIN role or being the subject of the request.\nExample Request:\nGET /v1/containers/6aae435c-e3e6-4976-a5e0-f99a9f930e44/revisions Content-Type: application/json Authorization: Bearer eyJFZXdEG1pZWmNrMkZYbkUlrIjoiT0tTcaDFsNY2RnVKZTFV9 Example Response:\nHTTP/1.1 200 OK Content-Type: application/json { \"items\": [ { \"containerID\": \"6aae435c-e3e6-4976-a5e0-f99a9f930e44\", \"revisionNumber\": 3, \"image\": \"nginxdemos/hello:updated\", \"dateCreated\": \"2023-09-23T17:04:53Z\" }, { \"containerID\": \"6aae435c-e3e6-4976-a5e0-f99a9f930e44\", \"revisionNumber\": 2, \"image\": \"ghcr.io/kubernetes-sigs/cluster-api/cluster-api-controller:v0.1.4\", \"dateCreated\": \"2019-03-24T00:00:00Z\" }, { \"containerID\": \"6aae435c-e3e6-4976-a5e0-f99a9f930e44\", \"revisionNumber\": 1, \"image\": \"ghcr.io/kubernetes-sigs/cluster-api/cluster-api-controller:v0.0.1\", \"dateCreated\": \"2019-02-20T00:00:00Z\" } ], \"total\": 3, \"page\": 1, \"rowsPerPage\": 10 } Status codes:\n200 - OK 401 - Unauthorized 403 - Forbidden 404 - Not Found 500 - Internal Server Error Get Container Logs GET /v1/containers/:id/logs\nGet the logs of the container. Creates an HTTP event stream for the log data.\nRequired permissions\nNo permissions required\nExample Request:\nGET /v1/containers/6aae435c-e3e6-4976-a5e0-f99a9f930e44/logs Content-Type: application/json Authorization: Bearer eyJFZXdEG1pZWmNrMkZYbkUlrIjoiT0tTcaDFsNY2RnVKZTFV9 Status codes:\n200 - OK 401 - Unauthorized 404 - Not Found 500 - Internal Server Error Get GPU Models GET /v1/gpu-models\nGet the list of GPU models supported.\nRequired permissions\nNo permissions required.\nExample Request:\nGET /v1/gpu-models Accept: application/json Authorization: Bearer eyJFZXdEG1pZWmNrMkZYbkUlrIjoiT0tTcaDFsNY2RnVKZTFV9 Example Response:\nHTTP/1.1 200 OK Content-Type: application/json { \"items\": [ { \"code\": \"h100\", \"name\": \"Nvidia h100\" }, { \"code\": \"a100\", \"name\": \"Nvidia a100\" }, { \"code\": \"a40\", \"name\": \"Nvidia a40\" }, { \"code\": \"a16\", \"name\": \"Nvidia a16\" }, { \"code\": \"t4\", \"name\": \"Nvidia t4\" }, { \"code\": \"v100\", \"name\": \"Nvidia v100\" }, { \"code\": \"p4\", \"name\": \"Nvidia tesla-p4\" }, { \"code\": \"p100\", \"name\": \"Nvidia tesla-p100\" }, { \"code\": \"k80\", \"name\": \"Nvidia tesla-k80\" }, { \"code\": \"3050\", \"name\": \"Nvidia rtx-3050\" }, { \"code\": \"3060\", \"name\": \"Nvidia rtx-3060\" }, { \"code\": \"3060ti\", \"name\": \"Nvidia rtx-3060-ti\" }, { \"code\": \"3070\", \"name\": \"Nvidia rtx-3070\" }, { \"code\": \"3070ti\", \"name\": \"Nvidia rtx-3070-ti\" }, { \"code\": \"3080\", \"name\": \"Nvidia rtx-3080\" }, { \"code\": \"3080ti\", \"name\": \"Nvidia rtx-3080-ti\" }, { \"code\": \"3090\", \"name\": \"Nvidia rtx-3090\" }, { \"code\": \"3090ti\", \"name\": \"Nvidia rtx-3090-ti\" }, { \"code\": \"1050\", \"name\": \"Nvidia gtx-1050\" }, { \"code\": \"1050ti\", \"name\": \"Nvidia gtx-1050-ti\" }, { \"code\": \"1060\", \"name\": \"Nvidia gtx-1060\" }, { \"code\": \"1070\", \"name\": \"Nvidia gtx-1070\" }, { \"code\": \"1070ti\", \"name\": \"Nvidia gtx-1070-ti\" }, { \"code\": \"1080\", \"name\": \"Nvidia gtx-1080\" }, { \"code\": \"1080ti\", \"name\": \"Nvidia gtx-1080-ti\" } ], \"total\": 25, \"page\": 1, \"rowsPerPage\": 100 } Status codes:\n200 - OK 401 - Unauthorized 500 - Internal Server Error ","categories":"","description":"The Container Service HTTP API provides endpoints to access the Container Service through HTTP.","excerpt":"The Container Service HTTP API provides endpoints to access the …","ref":"/docs/reference/api-reference/containers/","tags":"","title":"Container Service API"},{"body":"This page shows you how to deploy to Container Service a sample container that has already been pushed to a public registry (Docker Hub) in this case.\nBefore you Begin Make sure you are logged into console and that you have enough credits to continue. Be sure to delete all the resources you create after completing this guide so you avoid being charged.\nCreating your Container To create a container deployment on Container Service, you’ll need to:\nFrom the navigation menu select the Compute dropdown and then click on Container Service. Click on Create to go to the form to create your container. From here you’ll have to fill out the container creation form. Make sure that you specify a public registry path as private registries are not yet supported. Don’t forget to include your image tag (when using the latest tag make sure to include latest in the image).\nGPU Settings Container Service supports running containers that leverage GPU support. In case you select many different GPU models, your deployment will only run with access to one of those models.\nWarning GPUs can greatly increase the cost of running your container depending on the model. Once you are satisfied with the configuration click on Create. This action will redirect you to the container listing page where you’ll find your deployment as deploying. Quasarch Console is now waiting for Quasarplane to negotiate and send your container to one of our selected compute providers. Once the process is complete you’ll see the status of the container has changed to deployed. If something went wrong the container will have its status as failed.\nWarning Currently every container will have its port forwarded to port 80. Please make sure you set the port field correctly to point towards the container’s exposed port. ","categories":["Container Service"],"description":"Learn how to deploy a container on Quasarch Container Service.","excerpt":"Learn how to deploy a container on Quasarch Container Service.","ref":"/docs/tutorials/containers/user-guide/deploy/","tags":"","title":"Deploying on Container Service"},{"body":"This page features Container Service’s core use cases.\nNote that the full range of potential use cases is broader than what is covered here.\nWebsites and Web Applications Almost every developer will sooner or later need a place to host their website and applications. Container Service provides an easy deployment experience at a fraction of the price of centralized competitors. It is perfect for developers that want to host their website without going through the burden of configuring a server and avoiding surprise bills from unwanted usage. Quasarch will only charge you for the time your run, not the amount of traffic. Censorship-resistance let’s you freely express yourself without fear of being silenced.\nHPC Workloads In today’s data-driven world, businesses and organizations generate and process massive amounts of data in real-time. Whether it’s analyzing user behavior on a website, processing sensor data from IoT devices, or conducting financial market analysis, real-time data processing is critical for making informed decisions promptly. Big data technologies facilitate the handling of such large volumes of data, and serverless containers enhance the efficiency and scalability of real-time processing tasks. Container Service’s support of GPUs gives engineers the tools to take on HPC tasks.\nContent Delivery Networks Decentralized container services can enhance CDNs by deploying containers in various locations across the globe. This decentralized approach improves content delivery speeds by serving content from servers that are geographically closer to the end-users. Container Service’s price model can help engineers build a global CDN for a fraction of the cost.\nDApps Blockchain-based decentralized applications can utilize container services to manage and run application components. Each component of the DApp can be encapsulated within a container, providing isolation and security. Blockchain ensures the integrity and decentralization of the application data and transactions. Container Service enables web3 developers to deliver on the promise of decentralization by offering a truly decentralized platform to host containerized DApps.\n","categories":["Container Service"],"description":"What are the uses of a decentralized serverless container service.","excerpt":"What are the uses of a decentralized serverless container service.","ref":"/docs/tutorials/containers/use-cases/","tags":["containers"],"title":"Use Cases"},{"body":"The Providers HTTP API provides endpoints to manage resource providers.\nGet All Providers GET /v1/providers\nGet the list of all the providers onboarded into Quasarplane.\nRequired permissions\nNo permissions required.\nExample Request:\nGET /v1/providers Accept: application/json Authorization: Bearer eyJFZXdEG1pZWmNrMkZYbkUlrIjoiT0tTcaDFsNY2RnVKZTFV9 Example Response:\nHTTP/1.1 200 OK Content-Type: application/json { \"items\": [ { \"id\": \"5cb5f266-3473-4006-984f-9325121238be\", \"externalID\": \"akash18ga02jzaq8cw52anyhzkwta5wygufgu6zsz6xc\", \"type\": \"compute\", \"partner\": true, \"organization\": \"Europlots\", \"email\": \"email@example.com\", \"hostURI\": \"https://provider.europlots.com:8443\", \"dateCreated\": \"2019-03-24T00:00:00Z\", \"dateUpdated\": \"2019-03-24T00:00:00Z\", \"createdBy\": \"5cf37266-3473-4006-984f-9325122678b7\" }, { \"id\": \"6211fcfb-9cb5-47d5-bdc7-5ceb1a884aec\", \"externalID\": \"akash17gqmzu0lnh2uclx9flm755arylrhgqy7udj3el\", \"type\": \"compute\", \"partner\": false, \"organization\": \"Foundry Digital\", \"email\": \"hello@foundrydigital.com\", \"hostURI\": \"https://provider.akash.foundrystaking.com:8443/status\", \"dateCreated\": \"2019-03-24T00:00:00Z\", \"dateUpdated\": \"2019-03-24T00:00:00Z\", \"createdBy\": \"5cf37266-3473-4006-984f-9325122678b7\" } ], \"total\": 2, \"page\": 1, \"rowsPerPage\": 10 } 200 - OK 401 - Unauthorized 500 - Internal Server Error ","categories":"","description":"The Providers HTTP API provides endpoints to manage resource providers.","excerpt":"The Providers HTTP API provides endpoints to manage resource …","ref":"/docs/reference/api-reference/providers/","tags":"","title":"Providers API"},{"body":"Security is a shared responsibility between Quasarch, its providers and tenants.\nQuasarch - Quasarch’s responsibility is to securely distribute workloads across the different providers and taking measures in securing your data. Providers do not get information on who is hosting a particular container from Quasarch. Providers - Providers are responsible for protecting the infrastructure that runs Quasarch services in the Quasarch Cloud. Third-party auditors as well as Quasarch regularly test and verify the effectiveness of their security and compliance. Tenants - Tenant’s responsibility is determined by the services used. Tenants are also responsible for other factors including the sensitivity of their data, their project’s requirements and applicable laws and regulations. Full system security is only achieved if these 3 entities ensure a secure and compliant collaboration and data handling between each other.\n","categories":"","description":"How is your data's security handled by Quasarplane.","excerpt":"How is your data's security handled by Quasarplane.","ref":"/docs/learn/security/","tags":"","title":"Security in Quasarplane"},{"body":"In the ever-evolving landscape of digital technology, the demand for efficient, secure, and accessible cloud services has reached unprecedented heights. Traditional cloud platforms have undoubtedly transformed the way we store, manage, and share data. However, with these advancements come challenges, especially concerning centralization, security, and data privacy.\nQuasarch Console, a revolutionary platform that combines decentralized protocols to offer the next generation of cloud services. Quasarch Console stands, together with its partners, at the forefront of the Decentralized Cloud revolution, redefining the way individuals and businesses interact with the digital sphere.\nWhat is Quasarch Console \u0026 Quasarch Cloud Platform? Quasarch Console is not just another cloud service platform; it represents a paradigm shift in the world of cloud computing. Unlike conventional cloud platforms, Quasarch Console leverages the power of decentralized technologies, such as blockchain and peer-to-peer networking, to offer users a truly secure, private, and efficient cloud experience.\nAt the core of Quasarch’s Console offering is our control-plane solution for the Decentralized Cloud. Check Quasarplane Documentation for more details.\nThese two solutions form the Quasarch Cloud Platform with key features:\nDecentralization - Quasarch Cloud operates on decentralized protocols, eliminating the risks associated with centralized data centers. This decentralization ensures data integrity, reduces downtime, and enhances overall system reliability. Privacy - Quasarch Cloud prioritizes user privacy. By employing a decentralized model, it minimizes the collection of user data, putting control back into the hands of the users. Personal information remains private, and users have the freedom to manage their data as they see fit. Scalability - Quasarch Cloud’s decentralized architecture allows for seamless scalability. As the user base grows, the network adapts organically, ensuring optimal performance even during periods of high demand. Affordability - By eliminating the need for costly data centers and intermediaries, Quasarch Cloud offers cost-effective solutions to users. This affordability makes high-quality cloud services accessible to a broader audience, including startups, small businesses, and individual users. ","categories":"","description":"","excerpt":"In the ever-evolving landscape of digital technology, the demand for …","ref":"/docs/","tags":"","title":"Documentation Overview"},{"body":" This is an under development API.\nQuery Parameters Generic list of query parameters available for all queries.\nPage Number ?page=:number\nRequest a specific page number for the results.\nExample Request:\nGET /v1/containers?page=2 Accept: application/json Authorization: Bearer eyJFZXdEG1pZWmNrMkZYbkUlrIjoiT0tTcaDFsNY2RnVKZTFV9 Number of Rows ?rows=:number\nRequest a specific number of rows for the query.\nExample Request:\nGET /v1/containers?rows=10 Accept: application/json Authorization: Bearer eyJFZXdEG1pZWmNrMkZYbkUlrIjoiT0tTcaDFsNY2RnVKZTFV9 ","categories":"","description":"API reference to interact with Quasarplane programmatically.","excerpt":"API reference to interact with Quasarplane programmatically.","ref":"/docs/reference/api-reference/","tags":"","title":"API Reference"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/","tags":"","title":"Categories"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/container-service/","tags":"","title":"Container Service"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/containers/","tags":"","title":"Containers"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docs/how-to/","tags":"","title":"How To"},{"body":"Quasarplane is a control plane for decentralized cloud services and DePINs. It serves as layer to manage and guarantee enterprise-grade properties to decentralized systems.\nQuasarplane is the backbone of Quasarch Console and what makes Quasarch Cloud Platform run, providing most of the functionality available on it. It is important to understand how both of these components work together to make the most out of the platform or build your own integrations with Quasarch Cloud Platform.\nThe following documentation will provide you with everything you need to understand how the platform works and how you can build your own solutions on top of it. This documentation will not guide you through the usage of the Console, for that visit the Console documentation\nIntegrating Quasarplane was designed with integration as an architectural characteristic since the beginning. Integration can be done either through our managed service or a self-hosted solution. For a self-hosted solution integration contact the team.\nThe API can be accessed through REST. For more information read the API reference.\n","categories":"","description":"Overview of the Quasarplane control-plane system.","excerpt":"Overview of the Quasarplane control-plane system.","ref":"/docs/learn/","tags":"","title":"Learn Overview"},{"body":"Quasarplane comes with a billing module that enable users to be charged by the resources they consume. Due to its decentralized nature and the use of blockchain technologies, the process of billing and distributing credit across users is rather complex. When users purchase credit, they want predictability of how many resources they can expect to consume with those credits. This proves a challenge when you are working with volatile assets that are usually associated with these decentralized protocols.\nTo help mitigate these risks, Quasarplane will only exchange assets when absolutely required as per the user’s actions. It will be responsible for storing, securing and transacting the assets. Quasarplane contains an algorithm that defines the risk strategy that allows itself to operate efficiently and securely. User’s will not have any direct holding or management of any assets related to the direct interaction with integrated protocols. They do hold their credits and manage them as they see fit\n","categories":"","description":"How does Quasarplane handle resource payments and user credits..","excerpt":"How does Quasarplane handle resource payments and user credits..","ref":"/docs/learn/payment-and-credit/","tags":"","title":"Payment \u0026 Credit"},{"body":"As a solution that enables Tenants with self-sovereignty over their data, Tenants can choose where they want to run their workloads and store their data. Quasarch Cloud Platform can serve as a privacy layer between Tenants and Providers. Providers do not have access to the Quasarch Cloud Platform account that is accessing resources.\nCompute Providers Data Access Compute Providers will run Tenant workloads on their infrastructure and by deploying Tenants are trusting them with their data. They are required to manage workloads in a secure and responsible way and provide transparency to their Tenants.\nCompute Providers might have access to the following data:\nEnvironment variables Unencrypted files Unencrypted network traffic It is recommended that you design your applications with an emphasis on security whether you are trusting a centralized Cloud Provider or a decentralized Cloud Provider. At any time Tenants can query Provider data to help them make informed choices based on their specific requirements for security. For more information on what attributes you can have query check the Providers API Reference\n","categories":"","description":"Data privacy on Quasarch Cloud Platform","excerpt":"Data privacy on Quasarch Cloud Platform","ref":"/docs/learn/security/privacy/","tags":"","title":"Privacy"},{"body":"In a Quasarplane environment, Resource Providers, or simply Providers, are entities that contribute computing resources such as processing power (compute), storage, and network bandwidth to the network. These resources are collectively utilized to perform various tasks, store data, and run applications. Resource providers can be devices (such as computers or servers) connected to the network from individuals or organizations.\nQuasarplane operates on the principle of distributed computing, where resources are sourced from multiple nodes (computers or servers) spread across the network. Unlike traditional centralized cloud services, where resources are provided by a single or a few data centers owned by a specific company, Quasarplane distributes the workload across a vast network of independent participants.\nResource providers in Quasarplane play a crucial role in ensuring the availability, reliability, and scalability of the platform. Users looking to host applications, store data, or execute tasks can leverage the resources provided by these entities.\nTiers Providers that are onboarded into Quasarplane belong to one of two tiers. Each tier is a direct measure of the quality of the services a Provider offers.\nTier 1 - These providers are audited by external auditors and Quasarch has made due diligence on it. Tier 2 - Providers that have completed the Tier 1 and are direct partners of Quasarch. Tiers serve as incentives for Providers to better their services and begin a partnership relation with Quasarch. The more high tier Providers in the platform, the better service Quasarplane can provide which creates a collaborative integration between both entities.\nTypes of Providers Quasarplane, and by extension the Quasarch Cloud Platform as a whole, support several types of Resource Providers. They form the infrastructure layer that will support the cloud services offered by the platform.\nCompute Providers Compute Providers in Quasarplane are entities that offer computational resources, such as processing power, memory and storage to the platform. These resources are used to perform a wide range of tasks, including running applications and processing data. Compute providers are a fundamental component of Quasarplane and contribute to the overall computing power and capacity of the platform.\nHere are a few key points about Compute Providers in Quasarplane:\nDecentralized Nature - Compute Providers in a Decentralized Cloud Platform such as Quasarplane operate on a peer-to-peer network, where resources are sourced from individual computers or servers connected to the network. This ensures that the computing power is distributed across several entities rather than being concentrated in a few centralized data centers. Resource Sharing - Compute Providers share their computational resources, such as CPU cycles, RAM and GPUs, with the network. These resources will be utilized by developers, businesses, or other users to run applications and perform various computing tasks through Quasarplane’s Cloud Services. Incentives - Compute Providers are typically incentivized for their contributions to the network. These incentives encourage more individuals and organizations to participate, leading to a larger and more powerful Quasarplane. Security and Trust - Quasarplane employs encryption and cryptographic techniques to ensure the security and privacy of computations and data processing performed by Compute Providers. This is essential to maintain the integrity of applications and trust in the platform. In summary, Compute Providers in Quasarplane contribute their computational resources to the network, enabling a distributed, secure, and efficient computing infrastructure for various Quasarplane cloud services. ","categories":"","description":"What are Resource Providers in Quasarplane?","excerpt":"What are Resource Providers in Quasarplane?","ref":"/docs/learn/providers/","tags":"","title":"Providers"},{"body":" Quasarch Cloud\nDocumentation Try now! Get started Start using the Quasarch Console to deploy your website, blockchain node, database and many more applications.\nQuasarplane Learn more What's the system behind the Decentralized Cloud Platform?\nIntegrate with our API Read more Check our API reference to start integrating with Quasarplane and unlock the Decentralized Cloud in your applications\nQuasarch documentation provides a single web UI providing visibility into the documentation of Quasarch Cloud, the Decentralized Cloud Platform. ","categories":"","description":"","excerpt":" Quasarch Cloud\nDocumentation Try now! Get started Start using the …","ref":"/","tags":"","title":"Quasarch Documentation"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docs/reference/","tags":"","title":"Reference"},{"body":"Quasarplane uses a region mapping based on the UN (United Nations) geoscheme. You can find the available regions and respective codes below.\nCode Description na-ca-west North America Canada West coast. Provinces: (BC). na-ca-central North America Canada Central. Provinces: (QC, ON). na-ca-prairie North America Canada Prairie. Provinces: (AB, SK, MB). na-ca-atlantic North America Canada Atlantic. Provinces: (NL, PE, NS, NB). na-ca-north North America Canada North. Provinces: (NU, NT, YT). na-us-west North America United States of America West. States: (CA, OR, WA, ID, MT, WY, UT, CO, NV, AK, HI). na-us-southwest North America United States of America Southwest. States: (AZ, NM, TX, OK). na-us-midwest North America United States of America Midwest. States: (ND, SD, NE, KS, MN, IA, MO, WI, IL, MI, IN, OH). na-us-southeast North America United States of America Southeast. States: (AR, LA, MS, AL, TN, KY, WV, VA, NC, SC, GA, FL). na-us-northeast North America United States of America Northeast. States: (PA, NY, VT, NH, ME, MA, RI, CT, NJ, DE, MD). central-america Central America. Countries: (BZ, CR, SV, GT, HN, NI, PA). caribbean Caribbean. Countries: (AI, AG, AW, BS, BB, BQ, VG, KY, CU, CW, DM, DO, GD, GP, HT, JM, MQ, MS, VE, PR, BQ, BL, KN, LC, MF, VC, SX, TT, TC, VI). sa-north South America North. Countries: (CO, VE, GY, SR, GF). sa-west South America West. Countries: (PE, EC, BO). sa-south South America South. Countries: (AR, UY, CL, PY). sa-brazil South America Brazil. eu-central Central Europe. Countries (SI, HU, SK, PL, CZ, AT, CH, DE). eu-east Eastern Europe. Countries (MD, UA, BY, LT, LV, EE, RU). eu-north Northern Europe. Countries (DK, SE, NO, FI, IS). eu-southeast South-eastern Europe. Countries (AL, MK, BG, RO, RS, XK, ME, BA, HR). eu-south Southern Europe. Countries (IT, GR). eu-southwest South-western Europe. Countries (PT, ES, AD). eu-west Western Europe. Countries (FR, LU, BE, NL, GB, IE). af-east Eastern Africa. Countries (MZ, ZW, ZM, MW, TZ, BI, RW, KE, UG, SO, ET, DJ, ER, SS). af-middle Middle Africa. Countries (TD, CF, CM, GQ, GA, CG, CD, AO). af-north Northern Africa. Countries (EH, MA, DZ, TN, LY, EG, SD). af-south Southern Africa. Countries (NA, BW, ZA, LS, SZ). af-west Western Africa. Countries (MR, ML, NE, NG, BJ, TG, GH, BF, CI, LR, GN, SL, GW, GM, SN). as-central Central Asia. Countries (KZ, KG, TJ, TM, UZ). as-east Eastern Asia. Countries (CN, JP, KP, KR, MN, HK, MO, TW). as-southeast South-eastern Asia. Countries (MM, LA, TH, VN, KH, MY, SG, ID, TL, PH). as-south Southern Asia. Countries (IR, AF, PK, IN, BD, BT, NP, LK, MV). as-west Western Asia. Countries (TR, GE, AM, AZ, SY, LB, JO, IL, IQ, KW, SA, YE, OM, AE, QA, BH, CY, PS). oc-aus Oceania Australia. Countries (AU). oc-nz Oceania New Zealand. Countries (NZ). oc-mel Oceania Melanesia. Countries (PG, NR, SB, VU, NC, FJ). oc-mic Oceania Micronesia. Countries (PW, MP, GU, FM, MH, KI). oc-pol Oceania Polynesia. Countries (TV, WF, TK, AS, TO, NU, CK, PF, PN). ","categories":"","description":"Quasarplane regions based on United Nations Geoscheme","excerpt":"Quasarplane regions based on United Nations Geoscheme","ref":"/docs/learn/regions/","tags":"","title":"Regions"},{"body":"","categories":"","description":"","excerpt":"","ref":"/search/","tags":"","title":"Search Results"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/","tags":"","title":"Tags"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docs/tutorials/","tags":"","title":"Tutorials"}]